[versions]

# Libraries
guava = "31.1-jre"
jackson = "2.13.3"
kotlin = "1.6.21"
kotlinx-coroutines = "1.6.3"
shadow = "6.1.0"

# logging
julToSlf4j = "1.7.36"
kotlin-logging = "2.1.23"
logback-classic = "1.2.11"
logback-encoder = "7.2"

# testing
assertj = "3.23.1"
junit-jupiter = "5.8.2"
micronaut-junit = "3.4.0"
mockk = "1.12.4"

[libraries]
# BOMs

# Libraries
guava = { module = "com.google.guava:guava", version.ref = "guava" }
jackson = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }

# logging libs
kotlin-logging = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlin-logging" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback-classic" }
jul2slf4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "julToSlf4j" }
logstash = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logback-encoder" }

# test libs
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter" }
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

[plugins]
kotlinjvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinkapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlinallopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlinserialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
shadowplugin = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
